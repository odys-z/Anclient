<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>io.github.odys-z</groupId>
  <artifactId>anclient.jserv</artifactId>
  <version>0.1.0-SNAPSHOT</version>
  <name>anclient.jserv</name>
  <description>Anclient java version. A basic lib only depends on semantic.jserv</description>
  <packaging>jar</packaging>

  <url>https://odys-z.github.io/anclient</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	<maven.compiler.source>1.8</maven.compiler.source>
	<maven.compiler.target>1.8</maven.compiler.target>
  </properties>

  <repositories>
  	<repository>
  		<id>sonatype-snapshots</id>
  		<url>https://oss.sonatype.org/content/repositories/snapshots</url>
  	</repository>
  </repositories>

  <dependencies>
	<dependency>
    	<groupId>org.junit.jupiter</groupId>
    	<artifactId>junit-jupiter-engine</artifactId>
    	<version>5.3.1</version>
    	<scope>test</scope>
    </dependency>

	<!-- 
	<dependency>
	    <groupId>io.github.odys-z</groupId>
	    <artifactId>semantics.transact</artifactId>
	    <version>0.8.0-SNAPSHOT</version>
	</dependency> -->
	
	<!-- jserv-sample is a web application, but this project needing it's protocols.
		Referencing a war need some tricks. see answer by Morteza Malvandi 
		https://stackoverflow.com/questions/31020038/how-can-i-add-war-file-to-another-java-web-application-dependencies
	 -->
	<dependency>
	    <groupId>io.github.odys-z</groupId>
	    <artifactId>semantic.jserv</artifactId>
	    <version>1.1.1</version>
	</dependency>
	
  </dependencies>

  <build>
    <sourceDirectory>src</sourceDirectory>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.7.0</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>